version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lc-postgres
    environment:
      POSTGRES_DB: le-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - lc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d le-db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # DragonflyDB Cache (Redis-compatible)
  redis:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    container_name: lc_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - lc-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lc-backend
    environment:
      - DATABASE_URL=postgresql://postgres:123456@postgres:5432/le-db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production-lc-workflow-2024
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=60
      - JWT_REFRESH_TOKEN_EXPIRE_DAYS=30
      - API_V1_STR=/api/v1
      - PROJECT_NAME=LC Work Flow API
      - DEBUG=true
      - UPLOAD_DIR=./uploads
      - MAX_FILE_SIZE=10485760
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
    ports:
      - "8080:8000"
    volumes:
      - ./uploads:/app/uploads
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lc-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  lc-network:
    driver: bridge